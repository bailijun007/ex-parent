<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.hp.sh.expv3.pc.module.order.dao.PcOrderTradeDAO">

	<resultMap type="com.hp.sh.expv3.pc.module.order.entity.PcOrderTrade" id="PcOrderTrade">
		<result column="asset" property="asset" />
		<result column="symbol" property="symbol" />
		<result column="price" property="price" />
		<result column="volume" property="volume" />
		<result column="trade_sn" property="tradeSn" />
		<result column="trade_id" property="tradeId" />
		<result column="pos_id" property="posId" />
		<result column="order_id" property="orderId" />
		<result column="maker_flag" property="makerFlag" />
		<result column="trade_time" property="tradeTime" />
		<result column="opponent_order_id" property="opponentOrderId" />
		<result column="fee_collector_id" property="feeCollectorId" />
		<result column="fee_ratio" property="feeRatio" />
		<result column="fee" property="fee" />
		<result column="order_margin" property="orderMargin" />
		<result column="pnl" property="pnl" />
		<result column="remain_volume" property="remainVolume" />
		<result column="match_tx_id" property="matchTxId" />
		<result column="tx_id" property="txId" />
		<result column="fee_synch_status" property="feeSynchStatus" />
		<result column="user_id" property="userId" />
		<result column="id" property="id" />
		<result column="created" property="created" />
		<result column="modified" property="modified" />
	</resultMap>

	<sql id="Base_Column_List" >
		asset,symbol,price,volume,trade_sn,trade_id,pos_id,order_id,maker_flag,trade_time,opponent_order_id,fee_collector_id,fee_ratio,fee,order_margin,pnl,remain_volume,match_tx_id,tx_id,fee_synch_status,user_id,id,created,modified
	</sql>

	<sql id="simple_where" >
		<where>
		<if test="idList!=null">
		and id in
		<foreach item="item" index="i" collection="idList" open="(" separator="," close=")">
		#{idList[${i}]}
		</foreach>
		</if>
		<if test="userId!=null"> and user_id=#{userId}</if>
		<if test="asset!=null and asset!=''"> and asset=#{asset}</if>
		<if test="symbol!=null and symbol!=''"> and symbol=#{symbol}</if>
		<if test="orderId!=null"> and order_id=#{orderId}</if>
		<if test="tradeSn!=null and tradeSn!=''"> and trade_sn=#{tradeSn}</if>
		<if test="makerFlag!=null"> and maker_flag=#{makerFlag}</if>
		<if test="tradeTime!=null"> and trade_time=#{tradeTime}</if>
		<if test="feeCollectorId!=null"> and fee_collector_id=#{feeCollectorId}</if>
		<if test="createdStart!=null"> and created &gt;= #{createdStart}</if>
		<if test="createdEnd!=null"> and created &lt;= #{createdEnd}</if>
		<if test="modifiedStart!=null"> and modified &gt;= #{modifiedStart}</if>
		<if test="modifiedEnd!=null"> and modified &lt;= #{modifiedEnd}</if>
		<if test="feeSynchStatus!=null"> and fee_synch_status=#{feeSynchStatus}</if>
		<if test="keyword!=null and keyword!=''"> and symbol like CONCAT('%',#{keyword},'%')</if>	</where>
		
		<if test="tradeTimeStart!=null"> and trade_time &gt;= #{tradeTimeStart}</if>
	</sql>

	<sql id="simple_query" >
		select
			<include refid="Base_Column_List" />
		from pc_order_trade
			<include refid="simple_where" />
		<if test="orderBy!=null and orderBy!=''">
			order by ${orderBy} <if test="!asc">desc</if>
		</if>

	</sql>

	<select id="pageQuery" resultMap="PcOrderTrade">
		<include refid="simple_query" />
	</select>

	<select id="queryList" resultMap="PcOrderTrade">
		<include refid="simple_query" />
	</select>

	<select id="queryOne" resultMap="PcOrderTrade">
		<include refid="simple_query" />
	</select>

	<select id="queryCount" resultType="long">
		select 
		<choose>
			<when test="SUM!=null">
				sum(${SUM})
			</when>
			<otherwise>
				count(1)
			</otherwise>
		</choose>
		from pc_order_trade
		<include refid="simple_where" />
	</select>

	<select id="findById" resultMap="PcOrderTrade">
		select
			<include refid="Base_Column_List" />
		from pc_order_trade
			where id=#{id} and user_id=#{userId}
	</select>

	<select id="exist" resultType="long">
	select EXISTS(
		select 
			1
		from 
			pc_order_trade
		where 
			user_id=#{userId} and trade_sn=#{tradeSn}
		limit 1
	)
	</select>


	<insert id="save">
		insert into pc_order_trade (
			asset,symbol,price,volume,trade_sn,trade_id,pos_id,order_id,maker_flag,trade_time,opponent_order_id,fee_collector_id,fee_ratio,fee,order_margin,pnl,remain_volume,match_tx_id,tx_id,fee_synch_status,user_id,id,created,modified
		)values(
			#{asset},#{symbol},#{price},#{volume},#{tradeSn},#{tradeId},#{posId},#{orderId},#{makerFlag},#{tradeTime},#{opponentOrderId},#{feeCollectorId},#{feeRatio},#{fee},#{orderMargin},#{pnl},#{remainVolume},#{matchTxId},#{txId},#{feeSynchStatus},#{userId},#{id},#{created},#{modified}
		)
	</insert>
	
	<update id="update">
		update 
			pc_order_trade
		set 
			asset=#{asset},symbol=#{symbol},price=#{price},volume=#{volume},trade_sn=#{tradeSn},trade_id=#{tradeId},pos_id=#{posId},order_id=#{orderId},maker_flag=#{makerFlag},trade_time=#{tradeTime},opponent_order_id=#{opponentOrderId},fee_collector_id=#{feeCollectorId},fee_ratio=#{feeRatio},fee=#{fee},order_margin=#{orderMargin},pnl=#{pnl},remain_volume=#{remainVolume},match_tx_id=#{matchTxId},tx_id=#{txId},fee_synch_status=#{feeSynchStatus},user_id=#{userId},id=#{id},created=#{created},modified=#{modified}
		where 
			id=#{id} and user_id=#{userId}
	</update>

	<!--  -->
	
	<select id="queryOrderTrade" resultType="com.hp.sh.expv3.pc.strategy.vo.OrderTradeVo">
		select
			volume, price, order_id, id
		from 
			pc_order_trade
		where
			user_id=#{userId}
		<if test="orderIdList!=null">
			and order_id in
				<foreach item="item" index="i" collection="orderIdList" open="(" separator="," close=")">
				#{orderIdList[${i}]}
				</foreach>
		</if>
	</select>
	
	<update id="setSynchStatus">
		update 
			pc_order_trade
		set 
			fee_synch_status=#{feeSynchStatus},modified=#{modified}
		where 
			id=#{id} and user_id=#{userId}
	</update>
	
</mapper>