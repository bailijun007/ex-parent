<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.hp.sh.expv3.pc.module.order.dao.PcOrderTradeDAO">

	<resultMap type="com.hp.sh.expv3.pc.module.order.entity.PcOrderTrade" id="PcOrderTrade">
		<result column="account_id" property="accountId" />
		<result column="order_id" property="orderId" />
		<result column="trade_id" property="tradeId" />
		<result column="maker_flag" property="makerFlag" />
		<result column="symbol" property="symbol" />
		<result column="asset" property="asset" />
		<result column="price" property="price" />
		<result column="amt" property="amt" />
		<result column="volume" property="volume" />
		<result column="trade_time" property="tradeTime" />
		<result column="fee_collector_id" property="feeCollectorId" />
		<result column="fee_ratio" property="feeRatio" />
		<result column="fee" property="fee" />
		<result column="pnl" property="pnl" />
	</resultMap>

	<sql id="Base_Column_List" >
		account_id,order_id,trade_id,maker_flag,symbol,asset,price,amt,volume,trade_time,fee_collector_id,fee_ratio,fee,pnl
	</sql>

	<sql id="simple_where" >
		<where>
		<if test="accountId!=null"> and account_id=#{accountId}</if>
		<if test="orderId!=null"> and order_id=#{orderId}</if>
		<if test="tradeId!=null"> and trade_id=#{tradeId}</if>
		<if test="makerFlag!=null"> and maker_flag=#{makerFlag}</if>
		<if test="tradeTime!=null"> and trade_time=#{tradeTime}</if>
		<if test="feeCollectorId!=null"> and fee_collector_id=#{feeCollectorId}</if>
		<if test="keyword!=null and keyword!=''"> and CONCAT(IFNULL(symbol,''),IFNULL(asset,''),'') like CONCAT('%',#{keyword},'%')</if>	</where>
	</sql>

	<sql id="simple_query" >
		select
			<include refid="Base_Column_List" />
		from pc_order_trade
			<include refid="simple_where" />
		<if test="orderBy!=null and orderBy!=''">
			order by ${orderBy} <if test="!asc">desc</if>
		</if>

	</sql>

	<select id="pageQuery" resultMap="PcOrderTrade">
		<include refid="simple_query" />
	</select>

	<select id="queryList" resultMap="PcOrderTrade">
		<include refid="simple_query" />
	</select>

	<select id="queryOne" resultMap="PcOrderTrade">
		<include refid="simple_query" />
	</select>

	<select id="queryCount" resultType="long">
		select 
		<choose>
			<when test="SUM!=null">
				sum(${SUM})
			</when>
			<otherwise>
				count(1)
			</otherwise>
		</choose>
		from pc_order_trade
		<include refid="simple_where" />
	</select>

	<select id="findById" resultMap="PcOrderTrade">
		select
			<include refid="Base_Column_List" />
		from pc_order_trade
			where id=#{id}
	</select>

	<select id="exist" resultType="boolean">
		select 
			count(1)
		from 
			pc_order_trade
		<include refid="simple_where" />
		limit 1
	</select>


	<insert id="save">
		<selectKey resultType="long" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID() AS id
		</selectKey>
		insert into pc_order_trade (
			account_id,order_id,trade_id,maker_flag,symbol,asset,price,amt,volume,trade_time,fee_collector_id,fee_ratio,fee,pnl
		)values(
			#{accountId},#{orderId},#{tradeId},#{makerFlag},#{symbol},#{asset},#{price},#{amt},#{volume},#{tradeTime},#{feeCollectorId},#{feeRatio},#{fee},#{pnl}
		)
	</insert>
	
	<update id="update">
		update 
			pc_order_trade
		set 
			account_id=#{accountId},order_id=#{orderId},trade_id=#{tradeId},maker_flag=#{makerFlag},symbol=#{symbol},asset=#{asset},price=#{price},amt=#{amt},volume=#{volume},trade_time=#{tradeTime},fee_collector_id=#{feeCollectorId},fee_ratio=#{feeRatio},fee=#{fee},pnl=#{pnl}
		where 
			id=#{id}
	</update>

	<delete id="delete">
        delete from pc_order_trade where id=#{id}
    </delete>

    <delete id="condDelete">
        delete from pc_order_trade
		<include refid="simple_where" />
    </delete>

	<!--  -->
	
</mapper>