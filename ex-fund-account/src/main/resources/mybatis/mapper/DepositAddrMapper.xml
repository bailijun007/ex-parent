<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hp.sh.expv3.fund.cash.dao.DepositAddrDAO">

	<resultMap type="com.hp.sh.expv3.fund.cash.entity.DepositAddr" id="DepositAddr">
		<result column="id" property="id" />
		<result column="asset" property="asset" />
		<result column="address" property="address" />
		<result column="remark" property="remark" />
		<result column="enabled" property="enabled" />
		<result column="user_id" property="userId" />
		<result column="created" property="created" />
		<result column="modified" property="modified" />
	</resultMap>

	<sql id="Base_Column_List" >
		id,asset,address,remark,enabled,user_id,created,modified
	</sql>

	<sql id="simple_where">
		<where>
			<if test="userId!=null"> and user_id=#{userId}</if>
			<if test="asset!=null and asset!=''"> and asset=#{asset}</if>
			<if test="enabled!=null"> and enabled=#{enabled}</if>
			<if test="createdStart!=null"> and created &gt;= #{createdStart}</if>
			<if test="createdEnd!=null"> and created &lt;= #{createdEnd}</if>
			<if test="modifiedStart!=null"> and modified &gt;= #{modifiedStart}</if>
			<if test="modifiedEnd!=null"> and modified &lt;= #{modifiedEnd}</if>
			<if test="keyword!=null and keyword!=''"> and address like CONCAT('%',#{keyword},'%')
			</if>
		</where>
	</sql>

	<sql id="simple_query" >
		select
			<include refid="Base_Column_List" />
		from deposit_addr
			<include refid="simple_where" />
		<if test="orderBy!=null and orderBy!=''">
			order by ${orderBy} <if test="!asc">desc</if>
		</if>

	</sql>

	<select id="pageQuery" resultMap="DepositAddr">
		<include refid="simple_query" />
	</select>

	<select id="queryList" resultMap="DepositAddr">
		<include refid="simple_query" />
	</select>

	<select id="queryOne" resultMap="DepositAddr">
		<include refid="simple_query" />
	</select>

	<select id="queryCount" resultType="long">
		select 
		<choose>
			<when test="SUM!=null">
				sum(${SUM})
			</when>
			<otherwise>
				count(1)
			</otherwise>
		</choose>
		from deposit_addr
		<include refid="simple_where" />
	</select>

	<select id="findById" resultMap="DepositAddr">
		select
			<include refid="Base_Column_List" />
		from deposit_addr
			where id=#{id} and user_id=#{userId}
	</select>

	<select id="exist" resultType="boolean">
		select 
			count(1)
		from 
			deposit_addr
		<include refid="simple_where" />
		limit 1
	</select>


	<insert id="save">
		insert into deposit_addr (
			id,asset,address,remark,enabled,user_id,created,modified
		)values(
			#{id},#{asset},#{address},#{remark},#{enabled},#{userId},#{created},#{modified}
		)
	</insert>
	
	<update id="update">
		update 
			deposit_addr
		set 
			asset=#{asset},address=#{address},remark=#{remark},enabled=#{enabled},user_id=#{userId},created=#{created},modified=#{modified}
		where 
			id=#{id} and user_id=#{userId}
	</update>

	<delete id="delete">
        delete from deposit_addr where id=#{id} and user_id=#{userId}
    </delete>

    <delete id="condDelete">
        delete from deposit_addr
		<include refid="simple_where" />
    </delete>

	<!--  -->
	
</mapper>