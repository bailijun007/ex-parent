<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hp.sh.expv3.fund.wallet.dao.FundAccountRecordDAO">

	<resultMap type="com.hp.sh.expv3.fund.wallet.entity.FundAccountRecord" id="FundAccountRecord">
		<result column="id" property="id" />
		<result column="sn" property="sn" />
		<result column="type" property="type" />
		<result column="asset" property="asset" />
		<result column="amount" property="amount" />
		<result column="balance" property="balance" />
		<result column="trade_no" property="tradeNo" />
		<result column="trade_type" property="tradeType" />
		<result column="remark" property="remark" />
		<result column="serial_no" property="serialNo" />
		<result column="user_id" property="userId" />
		<result column="created" property="created" />
		<result column="modified" property="modified" />
	</resultMap>

	<sql id="Base_Column_List" >
		id,sn,type,asset,amount,balance,trade_no,trade_type,remark,serial_no,user_id,created,modified
	</sql>

	<sql id="simple_where">
		<where>
			<if test="idList!=null">
				and id in
				<foreach item="item" index="i" collection="idList" open="("
					separator="," close=")">
					#{idList[${i}]}
				</foreach>
			</if>
			<if test="type!=null"> and type=#{type}</if>
			<if test="tradeType!=null"> and trade_type=#{tradeType}</if>
			<if test="serialNo!=null"> and serial_no=#{serialNo}</if>
			<if test="userId!=null"> and user_id=#{userId}</if>
			<if test="createdStart!=null"> and created &gt;= #{createdStart}</if>
			<if test="createdEnd!=null"> and created &lt;= #{createdEnd}</if>
			<if test="modifiedStart!=null"> and modified &gt;= #{modifiedStart}</if>
			<if test="modifiedEnd!=null"> and modified &lt;= #{modifiedEnd}</if>
			<if test="keyword!=null and keyword!=''"> and
				(
					sn like CONCAT('%',#{keyword},'%')
				 	or trade_no like CONCAT('%',#{keyword},'%')
				) 
			</if>
		</where>
	</sql>

	<sql id="simple_query" >
		select
			<include refid="Base_Column_List" />
		from fund_account_record
			<include refid="simple_where" />
		<if test="orderBy!=null and orderBy!=''">
			order by ${orderBy} <if test="!asc">desc</if>
		</if>

	</sql>

	<select id="pageQuery" resultMap="FundAccountRecord">
		<include refid="simple_query" />
	</select>

	<select id="queryList" resultMap="FundAccountRecord">
		<include refid="simple_query" />
	</select>

	<select id="queryOne" resultMap="FundAccountRecord">
		<include refid="simple_query" />
	</select>

	<select id="queryCount" resultType="long">
		select 
		<choose>
			<when test="SUM!=null">
				sum(${SUM})
			</when>
			<otherwise>
				count(1)
			</otherwise>
		</choose>
		from fund_account_record
		<include refid="simple_where" />
	</select>

	<select id="findById" resultMap="FundAccountRecord">
		select
			<include refid="Base_Column_List" />
		from fund_account_record
			where id=#{id} and user_id=#{userId}
	</select>

	<select id="exist" resultType="boolean">
		select 
			count(1)
		from 
			fund_account_record
		<include refid="simple_where" />
		limit 1
	</select>


	<insert id="save">
		<selectKey resultType="long" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID() AS id
		</selectKey>
		insert into fund_account_record (
			id,sn,type,asset,amount,balance,trade_no,trade_type,remark,serial_no,user_id,created,modified
		)values(
			#{id},#{sn},#{type},#{asset},#{amount},#{balance},#{tradeNo},#{tradeType},#{remark},#{serialNo},#{userId},#{created},#{modified}
		)
	</insert>
	
	<update id="update">
		update 
			fund_account_record
		set 
			sn=#{sn},type=#{type},asset=#{asset},amount=#{amount},balance=#{balance},trade_no=#{tradeNo},trade_type=#{tradeType},remark=#{remark},serial_no=#{serialNo},user_id=#{userId},created=#{created},modified=#{modified}
		where 
			id=#{id} and user_id=#{userId}
	</update>

	<delete id="delete">
        delete from fund_account_record where id=#{id} and user_id=#{userId}
    </delete>

    <delete id="condDelete">
        delete from fund_account_record
		<include refid="simple_where" />
    </delete>

	<!--  --> 

	<select id="findByTradeNo" resultMap="FundAccountRecord">
		select
			<include refid="Base_Column_List" />
		from fund_account_record
			where user_id=#{userId} and trade_no=#{tradeNo}
	</select>
	
</mapper>