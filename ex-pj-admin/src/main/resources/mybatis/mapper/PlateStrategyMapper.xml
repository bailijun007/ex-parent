<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hp.sh.expv3.pj.module.plate.dao.PlateStrategyDAO">

	<resultMap type="com.hp.sh.expv3.pj.module.plate.entity.PlateStrategy" id="PlateStrategy">
		<result column="asset" property="asset" />
		<result column="symbol" property="symbol" />
		<result column="module" property="module" />
		<result column="step_min" property="stepMin" />
		<result column="step_max" property="stepMax" />
		<result column="price_min" property="priceMin" />
		<result column="price_max" property="priceMax" />
		<result column="delay_min" property="delayMin" />
		<result column="delay_max" property="delayMax" />
		<result column="volume_min" property="volumeMin" />
		<result column="volume_max" property="volumeMax" />
		<result column="remark" property="remark" />
		<result column="enabled" property="enabled" />
		<result column="id" property="id" />
		<result column="created" property="created" />
		<result column="modified" property="modified" />
	</resultMap>

	<sql id="Base_Column_List" >
		asset,symbol,module,step_min,step_max,price_min,price_max,delay_min,delay_max,volume_min,volume_max,remark,enabled,id,created,modified
	</sql>

	<sql id="simple_where" >
		<where>
		<if test="stepMin!=null"> and step_min=#{stepMin}</if>
		<if test="stepMax!=null"> and step_max=#{stepMax}</if>
		<if test="priceMin!=null"> and price_min=#{priceMin}</if>
		<if test="priceMax!=null"> and price_max=#{priceMax}</if>
		<if test="delayMin!=null"> and delay_min=#{delayMin}</if>
		<if test="delayMax!=null"> and delay_max=#{delayMax}</if>
		<if test="volumeMin!=null"> and volume_min=#{volumeMin}</if>
		<if test="volumeMax!=null"> and volume_max=#{volumeMax}</if>
		<if test="enabled!=null"> and enabled=#{enabled}</if>
		<if test="id!=null"> and id=#{id}</if>
		<if test="created!=null"> and created=#{created}</if>
		<if test="modified!=null"> and modified=#{modified}</if>
		<if test="keyword!=null and keyword!=''"> and CONCAT(IFNULL(asset,''),IFNULL(symbol,''),IFNULL(module,''),IFNULL(remark,''),'') like CONCAT('%',#{keyword},'%')</if>	</where>
	</sql>

	<sql id="simple_query" >
		select
			<include refid="Base_Column_List" />
		from plate_strategy
			<include refid="simple_where" />
		<if test="orderBy!=null and orderBy!=''">
			order by ${orderBy} <if test="!asc">desc</if>
		</if>

	</sql>

	<select id="pageQuery" resultMap="PlateStrategy">
		<include refid="simple_query" />
	</select>

	<select id="queryList" resultMap="PlateStrategy">
		<include refid="simple_query" />
	</select>

	<select id="queryOne" resultMap="PlateStrategy">
		<include refid="simple_query" />
	</select>

	<select id="queryCount" resultType="long">
		select 
		<choose>
			<when test="SUM!=null">
				sum(${SUM})
			</when>
			<otherwise>
				count(1)
			</otherwise>
		</choose>
		from plate_strategy
		<include refid="simple_where" />
	</select>

	<select id="findById" resultMap="PlateStrategy">
		select
			<include refid="Base_Column_List" />
		from plate_strategy
			where id=#{id}
	</select>

	<select id="exist" resultType="boolean">
		select 
			count(1)
		from 
			plate_strategy
		<include refid="simple_where" />
		limit 1
	</select>

	<insert id="save">
		<selectKey resultType="long" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID() AS id
		</selectKey>
		insert into plate_strategy (
			asset,symbol,module,step_min,step_max,price_min,price_max,delay_min,delay_max,volume_min,volume_max,remark,enabled,id,created,modified
		)values(
			#{asset},#{symbol},#{module},#{stepMin},#{stepMax},#{priceMin},#{priceMax},#{delayMin},#{delayMax},#{volumeMin},#{volumeMax},#{remark},#{enabled},#{id},#{created},#{modified}
		)
	</insert>
	
	<update id="update">
		update 
			plate_strategy
		set 
			asset=#{asset},symbol=#{symbol},module=#{module},step_min=#{stepMin},step_max=#{stepMax},price_min=#{priceMin},price_max=#{priceMax},delay_min=#{delayMin},delay_max=#{delayMax},volume_min=#{volumeMin},volume_max=#{volumeMax},remark=#{remark},enabled=#{enabled},id=#{id},created=#{created},modified=#{modified}
		where 
			id=#{id}
	</update>

	<delete id="delete">
        delete from plate_strategy where id=#{id}
    </delete>

    <delete id="condDelete">
        delete from plate_strategy
		<include refid="simple_where" />
    </delete>

	<!--  -->

	<select id="findBySymbol" resultMap="PlateStrategy">
		select
			<include refid="Base_Column_List" />
		from plate_strategy
			where asset=#{asset} and symbol=#{symbol}
	</select>
	
</mapper>
