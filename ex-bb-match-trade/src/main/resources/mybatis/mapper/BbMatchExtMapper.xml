<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.hp.sh.expv3.bb.trade.dao.BbMatchExtMapper">

    <resultMap type="com.hp.sh.expv3.bb.extension.vo.BbTradeVo" id="BbTradeVo">
        <result column="id" property="id"/>
        <result column="asset" property="asset"/>
        <result column="symbol" property="symbol"/>
        <result column="match_tx_id" property="matchTxId"/>
        <result column="tk_bid_flag" property="tkBidFlag"/>
        <result column="tk_account_id" property="tkAccountId"/>
        <result column="tk_order_id" property="tkOrderId"/>
        <result column="mk_account_id" property="mkAccountId"/>
        <result column="mk_order_id" property="mkOrderId"/>
        <result column="price" property="price"/>
        <result column="number" property="number"/>
        <result column="trade_time" property="tradeTime"/>
        <result column="created" property="created"/>
        <result column="modified" property="modified"/>
    </resultMap>

    <sql id="Base_Column_List">
		id,asset,symbol,match_tx_id,tk_bid_flag,tk_account_id,tk_order_id,mk_account_id,
		mk_order_id,price,`number`,trade_time,created,modified
    </sql>


    <sql id="simple_where">
        <where>
            <if test="idList!=null">
                and id in
                <foreach item="item" index="i" collection="idList" open="(" separator="," close=")">
                    #{idList[${i}]}
                </foreach>
            </if>
            <if test="userId!=null">and user_id=#{userId}</if>
            <if test="asset!=null and asset!=''">and asset=#{asset}</if>
            <if test="symbol!=null and symbol!=''">and symbol=#{symbol}</if>
            <if test="tkBidFlag!=null">and tk_bid_flag=#{tkBidFlag}</if>
            <if test="tkAccountId!=null">and tk_account_id=#{tkAccountId}</if>
            <if test="tkOrderId!=null">and tk_order_id=#{tkOrderId}</if>
            <if test="mkAccountId!=null">and mk_account_id=#{mkAccountId}</if>
            <if test="mkOrderId!=null">and mk_order_id=#{mkOrderId}</if>
            <if test="tradeTimeBegin!=null">and trade_time&gt;=#{tradeTimeBegin}</if>
            <if test="tradeTimeEnd!=null">and trade_time&lt;=#{tradeTimeEnd}</if>
            <if test="createdBegin!=null">and created &gt;= #{createdBegin}</if>
            <if test="createdEnd!=null">and created &lt;= #{createdEnd}</if>
            <if test="modifiedBegin!=null">and modified &gt;= #{modifiedBegin}</if>
            <if test="modifiedEnd!=null">and modified &lt;= #{modifiedEnd}</if>
        </where>
    </sql>

    <sql id="simple_query">
        select
        <include refid="Base_Column_List"/>
        from bb_match
        <include refid="simple_where"/>

    </sql>



    <insert id="batchSave">
        insert into ${table} (
        id,asset,symbol,match_tx_id,tk_bid_flag,tk_account_id,tk_order_id,mk_account_id,mk_order_id,price,`number`,trade_time,created,modified
        )values
        <foreach collection="trades" item="item" index="index" separator=",">
            (#{item.id},#{item.asset},#{item.symbol},#{item.matchTxId},#{item.tkBidFlag},#{item.tkAccountId},#{item.tkOrderId},#{item.mkAccountId},#{item.mkOrderId},#{item.price},
            #{item.number},#{item.tradeTime},#{item.created},#{item.modified})
        </foreach>

    </insert>

    <insert id="save">
        insert into bb_match (
			asset,symbol,match_tx_id,tk_bid_flag,tk_account_id,tk_order_id,mk_account_id,mk_order_id,price,`number`,trade_time,created,modified
			)values(
			#{tradeVo.asset},#{tradeVo.symbol},#{tradeVo.matchTxId},#{tradeVo.tkBidFlag},#{tradeVo.tkAccountId},#{tradeVo.tkOrderId},#{tradeVo.mkAccountId},#{tradeVo.mkOrderId},#{tradeVo.price},#{tradeVo.number},#{tradeVo.tradeTime},#{tradeVo.created},#{tradeVo.modified})
    </insert>

    <select id="queryList" resultMap="BbTradeVo">
        select
        <include refid="Base_Column_List"/>
        from bb_match
        <include refid="simple_where"/>
        <if test="orderBy!=null and orderBy!=''">
            order by ${orderBy} desc
        </if>
            LIMIT 0,${limit}
    </select>

    <select id="selectTradeListByTimeInterval" resultMap="BbTradeVo">
        select
        <include refid="Base_Column_List"/>
        from bb_match
        where
        asset=#{asset}
        and symbol=#{symbol}
        and trade_time &gt;=#{tradeTimeBegin}
        and trade_time &lt;#{tradeTimeEnd}
        order by trade_time asc
    </select>

    <select id="selectTradeListByUser" resultMap="BbTradeVo">
        select
        <include refid="Base_Column_List"/>
        from bb_match
        where
        user_id=#{userId}
        and asset=#{asset}
        and symbol=#{symbol}
        <if test="tradeTimeBegin!=null">
            and trade_time &gt;=#{tradeTimeBegin}
        </if>
        <if test="tradeTimeEnd!=null">
            and trade_time &lt;#{tradeTimeEnd}
        </if>
        order by trade_time asc
    </select>


    <select id="queryTradeList" resultMap="BbTradeVo">
        select
        <include refid="Base_Column_List"/>
        from bb_match
        where
        user_id=#{userId}
        and asset=#{asset}
        and symbol=#{symbol}
        <if test="tradeTimeBegin!=null">
            and trade_time &gt;=#{tradeTimeBegin}
        </if>
        <if test="tradeTimeEnd!=null">
            and trade_time &lt;#{tradeTimeEnd}
        </if>
        order by trade_time desc
        LIMIT 0,${limit}
    </select>

    <select id="queryLastTradeByLtTime" resultMap="BbTradeVo">
        select
        <include refid="Base_Column_List"/>
        from bb_match
        <where>
            <if test="asset!=null and asset!=''">and asset=#{asset}</if>
            <if test="symbol!=null and symbol!=''">and symbol=#{symbol}</if>
            <if test="tradeTimeBegin!=null">and trade_time &gt;= #{tradeTimeBegin}</if>
            <if test="tradeTimeEnd!=null">and trade_time &lt; #{tradeTimeEnd}</if>
        </where>
        order by trade_time desc
        limit 0,1
    </select>

</mapper>